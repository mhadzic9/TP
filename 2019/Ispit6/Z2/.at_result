{
    "buildhost_description": {
        "id": "lab002c01",
        "os": "Linux 2.6.32-754.2.1.el6.x86_64 x86_64\n\"CentOS release 6.10 (Final)\"\n",
        "compiler_version": "g++ (GCC) 6.2.0",
        "debugger_version": "GNU gdb (GDB) 7.12",
        "profiler_version": "valgrind-3.12.0"
    },
    "status": 4,
    "compile_result": {
        "status": 1,
        "output": ""
    },
    "run_result": [],
    "debug_result": [],
    "profile_result": [],
    "test_results": {
        "10": {
            "status": 5,
            "run_result": {
                "output": "AT1 - test konstruktora sa jednim parametrom\nOK\nAT2 - test konstruktora sa dva parametra\nOK\nAT3 - test sekvencijskog konstruktora\nOK\nAT4 - testiranje metode DajDuzinu\n0 9 8 15 10 12 3\nAT5 - testiranje operatora dodjele (string = string) + ispis na izlazni tok\nS2: 0<M\u0001\u0000\u0000\u0000\u0000  S4: Danas je ispit.\nS2: Danas je ispit. S4: Danas je ispit.\nAT6 - testiranje operatora dodjele (string = const char) + ispis na izlazni tok\nS2: 0<M\u0001\u0000\u0000\u0000\u0000  S4: Danas je ispit.\n",
                "duration": 0,
                "status": 3,
                "core": "/tmp/buildservice/bs_4147/core.13089"
            },
            "debug_result": {
                "output": "[New LWP 13089]\nCore was generated by `bs_test_10'.\nProgram terminated with signal SIGABRT, Aborted.\n#0  0x00000036312324f5 in raise () from /lib64/libc.so.6\nTo enable execution of this file add\n\tadd-auto-load-safe-path /opt/gcc-6.2.0/lib64/libstdc++.so.6.0.22-gdb.py\nline to your configuration file \"$HOME/.gdbinit\".\nTo completely disable this security protection add\n\tset auto-load safe-path /\nline to your configuration file \"$HOME/.gdbinit\".\nFor more information about this security protection see the\n\"Auto-loading safe path\" section in the GDB manual.  E.g., run from the shell:\n\tinfo \"(gdb)Auto-loading safe path\"\n#0  0x00000036312324f5 in raise () from /lib64/libc.so.6\n#1  0x0000003631233cd5 in abort () from /lib64/libc.so.6\n#2  0x0000003631270417 in __libc_message () from /lib64/libc.so.6\n#3  0x0000003631275e5e in malloc_printerr () from /lib64/libc.so.6\n#4  0x0000003631278cad in _int_free () from /lib64/libc.so.6\n#5  0x0000000000401c2f in String::operator= (this=0x7fffd1ed3660, niz=0x401f60 \"Pada kisa.\") at bs_test_10.cpp:54\n#6  0x00000000004012b5 in main () at bs_test_10.cpp:153",
                "parsed_output": [
                    {
                        "file": "main.cpp",
                        "line": 48
                    }
                ]
            },
            "profile_result": {
                "output": "==13102== Memcheck, a memory error detector\n==13102== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==13102== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info\n==13102== Command: bs_test_10\n==13102== Parent PID: 13101\n==13102== \n==13102== Syscall param write(buf) points to uninitialised byte(s)\n==13102==    at 0x36312DB850: __write_nocancel (in /lib64/libc-2.12.so)\n==13102==    by 0x36312719B2: _IO_file_write@@GLIBC_2.2.5 (in /lib64/libc-2.12.so)\n==13102==    by 0x3631272F64: _IO_do_write@@GLIBC_2.2.5 (in /lib64/libc-2.12.so)\n==13102==    by 0x3631272167: _IO_file_sync@@GLIBC_2.2.5 (in /lib64/libc-2.12.so)\n==13102==    by 0x3631266879: fflush (in /lib64/libc-2.12.so)\n==13102==    by 0x4D2CC2D: pubsync (streambuf:271)\n==13102==    by 0x4D2CC2D: std::ostream::flush() (ostream.tcc:219)\n==13102==    by 0x401169: main (bs_test_10.cpp:144)\n==13102==  Address 0x4fa5004 is in a rw- anonymous segment\n==13102== \n==13102== Invalid write of size 1\n==13102==    at 0x401BF5: String::operator=(String const&) (bs_test_10.cpp:44)\n==13102==    by 0x401182: main (bs_test_10.cpp:145)\n==13102==  Address 0x51f00c0 is 0 bytes inside a block of size 9 free'd\n==13102==    at 0x4A0764A: operator delete[](void*) (vg_replace_malloc.c:621)\n==13102==    by 0x401BB2: String::operator=(String const&) (bs_test_10.cpp:41)\n==13102==    by 0x401182: main (bs_test_10.cpp:145)\n==13102==  Block was alloc'd at\n==13102==    at 0x4A06849: operator new[](unsigned long) (vg_replace_malloc.c:423)\n==13102==    by 0x40194F: String::String(char const*) (bs_test_10.cpp:16)\n==13102==    by 0x4010DA: main (bs_test_10.cpp:143)\n==13102== \n==13102== Invalid read of size 1\n==13102==    at 0x401CC7: operator<<(std::ostream&, String const&) (bs_test_10.cpp:67)\n==13102==    by 0x4011A6: main (bs_test_10.cpp:146)\n==13102==  Address 0x51f00c0 is 0 bytes inside a block of size 9 free'd\n==13102==    at 0x4A0764A: operator delete[](void*) (vg_replace_malloc.c:621)\n==13102==    by 0x401BB2: String::operator=(String const&) (bs_test_10.cpp:41)\n==13102==    by 0x401182: main (bs_test_10.cpp:145)\n==13102==  Block was alloc'd at\n==13102==    at 0x4A06849: operator new[](unsigned long) (vg_replace_malloc.c:423)\n==13102==    by 0x40194F: String::String(char const*) (bs_test_10.cpp:16)\n==13102==    by 0x4010DA: main (bs_test_10.cpp:143)\n==13102== \n==13102== Invalid free() / delete / delete[] / realloc()\n==13102==    at 0x4A0764A: operator delete[](void*) (vg_replace_malloc.c:621)\n==13102==    by 0x401B84: String::~String() (bs_test_10.cpp:39)\n==13102==    by 0x4011F3: main (bs_test_10.cpp:143)\n==13102==  Address 0x51f00c0 is 0 bytes inside a block of size 9 free'd\n==13102==    at 0x4A0764A: operator delete[](void*) (vg_replace_malloc.c:621)\n==13102==    by 0x401BB2: String::operator=(String const&) (bs_test_10.cpp:41)\n==13102==    by 0x401182: main (bs_test_10.cpp:145)\n==13102==  Block was alloc'd at\n==13102==    at 0x4A06849: operator new[](unsigned long) (vg_replace_malloc.c:423)\n==13102==    by 0x40194F: String::String(char const*) (bs_test_10.cpp:16)\n==13102==    by 0x4010DA: main (bs_test_10.cpp:143)\n==13102== \n==13102== Invalid write of size 1\n==13102==    at 0x401C76: String::operator=(char const*) (bs_test_10.cpp:57)\n==13102==    by 0x4012B4: main (bs_test_10.cpp:153)\n==13102==  Address 0x51f0160 is 0 bytes inside a block of size 9 free'd\n==13102==    at 0x4A0764A: operator delete[](void*) (vg_replace_malloc.c:621)\n==13102==    by 0x401C2E: String::operator=(char const*) (bs_test_10.cpp:54)\n==13102==    by 0x4012B4: main (bs_test_10.cpp:153)\n==13102==  Block was alloc'd at\n==13102==    at 0x4A06849: operator new[](unsigned long) (vg_replace_malloc.c:423)\n==13102==    by 0x40194F: String::String(char const*) (bs_test_10.cpp:16)\n==13102==    by 0x401223: main (bs_test_10.cpp:151)\n==13102== \n==13102== Invalid read of size 1\n==13102==    at 0x401CC7: operator<<(std::ostream&, String const&) (bs_test_10.cpp:67)\n==13102==    by 0x4012D8: main (bs_test_10.cpp:154)\n==13102==  Address 0x51f0160 is 0 bytes inside a block of size 9 free'd\n==13102==    at 0x4A0764A: operator delete[](void*) (vg_replace_malloc.c:621)\n==13102==    by 0x401C2E: String::operator=(char const*) (bs_test_10.cpp:54)\n==13102==    by 0x4012B4: main (bs_test_10.cpp:153)\n==13102==  Block was alloc'd at\n==13102==    at 0x4A06849: operator new[](unsigned long) (vg_replace_malloc.c:423)\n==13102==    by 0x40194F: String::String(char const*) (bs_test_10.cpp:16)\n==13102==    by 0x401223: main (bs_test_10.cpp:151)\n==13102== \n==13102== Invalid write of size 1\n==13102==    at 0x401C76: String::operator=(char const*) (bs_test_10.cpp:57)\n==13102==    by 0x40131B: main (bs_test_10.cpp:155)\n==13102==  Address 0x51f01b0 is 0 bytes inside a block of size 15 free'd\n==13102==    at 0x4A0764A: operator delete[](void*) (vg_replace_malloc.c:621)\n==13102==    by 0x401C2E: String::operator=(char const*) (bs_test_10.cpp:54)\n==13102==    by 0x40131B: main (bs_test_10.cpp:155)\n==13102==  Block was alloc'd at\n==13102==    at 0x4A06849: operator new[](unsigned long) (vg_replace_malloc.c:423)\n==13102==    by 0x401AA1: String::String(std::initializer_list<char>) (bs_test_10.cpp:28)\n==13102==    by 0x40124D: main (bs_test_10.cpp:151)\n==13102== \n==13102== Invalid read of size 1\n==13102==    at 0x401CC7: operator<<(std::ostream&, String const&) (bs_test_10.cpp:67)\n==13102==    by 0x40133F: main (bs_test_10.cpp:156)\n==13102==  Address 0x51f0160 is 0 bytes inside a block of size 9 free'd\n==13102==    at 0x4A0764A: operator delete[](void*) (vg_replace_malloc.c:621)\n==13102==    by 0x401C2E: String::operator=(char const*) (bs_test_10.cpp:54)\n==13102==    by 0x4012B4: main (bs_test_10.cpp:153)\n==13102==  Block was alloc'd at\n==13102==    at 0x4A06849: operator new[](unsigned long) (vg_replace_malloc.c:423)\n==13102==    by 0x40194F: String::String(char const*) (bs_test_10.cpp:16)\n==13102==    by 0x401223: main (bs_test_10.cpp:151)\n==13102== \n==13102== Invalid read of size 1\n==13102==    at 0x401CC7: operator<<(std::ostream&, String const&) (bs_test_10.cpp:67)\n==13102==    by 0x401361: main (bs_test_10.cpp:156)\n==13102==  Address 0x51f01b0 is 0 bytes inside a block of size 15 free'd\n==13102==    at 0x4A0764A: operator delete[](void*) (vg_replace_malloc.c:621)\n==13102==    by 0x401C2E: String::operator=(char const*) (bs_test_10.cpp:54)\n==13102==    by 0x40131B: main (bs_test_10.cpp:155)\n==13102==  Block was alloc'd at\n==13102==    at 0x4A06849: operator new[](unsigned long) (vg_replace_malloc.c:423)\n==13102==    by 0x401AA1: String::String(std::initializer_list<char>) (bs_test_10.cpp:28)\n==13102==    by 0x40124D: main (bs_test_10.cpp:151)\n==13102== \n==13102== Invalid free() / delete / delete[] / realloc()\n==13102==    at 0x4A0764A: operator delete[](void*) (vg_replace_malloc.c:621)\n==13102==    by 0x401B84: String::~String() (bs_test_10.cpp:39)\n==13102==    by 0x40137D: main (bs_test_10.cpp:151)\n==13102==  Address 0x51f01b0 is 0 bytes inside a block of size 15 free'd\n==13102==    at 0x4A0764A: operator delete[](void*) (vg_replace_malloc.c:621)\n==13102==    by 0x401C2E: String::operator=(char const*) (bs_test_10.cpp:54)\n==13102==    by 0x40131B: main (bs_test_10.cpp:155)\n==13102==  Block was alloc'd at\n==13102==    at 0x4A06849: operator new[](unsigned long) (vg_replace_malloc.c:423)\n==13102==    by 0x401AA1: String::String(std::initializer_list<char>) (bs_test_10.cpp:28)\n==13102==    by 0x40124D: main (bs_test_10.cpp:151)\n==13102== \n==13102== Invalid free() / delete / delete[] / realloc()\n==13102==    at 0x4A0764A: operator delete[](void*) (vg_replace_malloc.c:621)\n==13102==    by 0x401B84: String::~String() (bs_test_10.cpp:39)\n==13102==    by 0x40138C: main (bs_test_10.cpp:151)\n==13102==  Address 0x51f0160 is 0 bytes inside a block of size 9 free'd\n==13102==    at 0x4A0764A: operator delete[](void*) (vg_replace_malloc.c:621)\n==13102==    by 0x401C2E: String::operator=(char const*) (bs_test_10.cpp:54)\n==13102==    by 0x4012B4: main (bs_test_10.cpp:153)\n==13102==  Block was alloc'd at\n==13102==    at 0x4A06849: operator new[](unsigned long) (vg_replace_malloc.c:423)\n==13102==    by 0x40194F: String::String(char const*) (bs_test_10.cpp:16)\n==13102==    by 0x401223: main (bs_test_10.cpp:151)\n==13102== \n==13102== Use of uninitialised value of size 8\n==13102==    at 0x401B52: String::String(String const&) (bs_test_10.cpp:35)\n==13102==    by 0x401452: main (bs_test_10.cpp:163)\n==13102== \n==13102== Invalid write of size 1\n==13102==    at 0x401B52: String::String(String const&) (bs_test_10.cpp:35)\n==13102==    by 0x401452: main (bs_test_10.cpp:163)\n==13102==  Address 0x0 is not stack'd, malloc'd or (recently) free'd\n==13102== \n==13102== \n==13102== Process terminating with default action of signal 11 (SIGSEGV)\n==13102==  Access not within mapped region at address 0x0\n==13102==    at 0x401B52: String::String(String const&) (bs_test_10.cpp:35)\n==13102==    by 0x401452: main (bs_test_10.cpp:163)\n==13102==  If you believe this happened as a result of a stack\n==13102==  overflow in your program's main thread (unlikely but\n==13102==  possible), you can try to increase the size of the\n==13102==  main thread stack using the --main-stacksize= flag.\n==13102==  The main thread stack size used in this run was 10485760.\n==13102== \n==13102== HEAP SUMMARY:\n==13102==     in use at exit: 24 bytes in 2 blocks\n==13102==   total heap usage: 21 allocs, 22 frees, 72,890 bytes allocated\n==13102== \n==13102== LEAK SUMMARY:\n==13102==    definitely lost: 0 bytes in 0 blocks\n==13102==    indirectly lost: 0 bytes in 0 blocks\n==13102==      possibly lost: 0 bytes in 0 blocks\n==13102==    still reachable: 24 bytes in 2 blocks\n==13102==         suppressed: 0 bytes in 0 blocks\n==13102== Reachable blocks (those to which a pointer was found) are not shown.\n==13102== To see them, rerun with: --leak-check=full --show-leak-kinds=all\n==13102== \n==13102== For counts of detected and suppressed errors, rerun with: -v\n==13102== Use --track-o",
                "status": 2,
                "parsed_output": [
                    {
                        "type": 2,
                        "output": " Invalid write of size 1\n    at 0x401BF5: String::operator=(String const&) (bs_test_10.cpp:44)\n    by 0x401182: main (bs_test_10.cpp:145)\n  Address 0x51f00c0 is 0 bytes inside a block of size 9 free'd\n    at 0x4A0764A: operator delete[](void*) (vg_replace_malloc.c:621)\n    by 0x401BB2: String::operator=(String const&) (bs_test_10.cpp:41)\n    by 0x401182: main (bs_test_10.cpp:145)\n  Block was alloc'd at\n    at 0x4A06849: operator new[](unsigned long) (vg_replace_malloc.c:423)\n    by 0x40194F: String::String(char const*) (bs_test_10.cpp:16)\n    by 0x4010DA: main (bs_test_10.cpp:143)\n",
                        "file": "main.cpp",
                        "line": 38,
                        "file_alloced": "main.cpp",
                        "line_alloced": 35
                    },
                    {
                        "type": 2,
                        "output": " Invalid read of size 1\n    at 0x401CC7: operator<<(std::ostream&, String const&) (bs_test_10.cpp:67)\n    by 0x4011A6: main (bs_test_10.cpp:146)\n  Address 0x51f00c0 is 0 bytes inside a block of size 9 free'd\n    at 0x4A0764A: operator delete[](void*) (vg_replace_malloc.c:621)\n    by 0x401BB2: String::operator=(String const&) (bs_test_10.cpp:41)\n    by 0x401182: main (bs_test_10.cpp:145)\n  Block was alloc'd at\n    at 0x4A06849: operator new[](unsigned long) (vg_replace_malloc.c:423)\n    by 0x40194F: String::String(char const*) (bs_test_10.cpp:16)\n    by 0x4010DA: main (bs_test_10.cpp:143)\n",
                        "file": "main.cpp",
                        "line": 61,
                        "file_alloced": "main.cpp",
                        "line_alloced": 35
                    },
                    {
                        "type": 5,
                        "output": " Invalid free() / delete / delete[] / realloc()\n    at 0x4A0764A: operator delete[](void*) (vg_replace_malloc.c:621)\n    by 0x401B84: String::~String() (bs_test_10.cpp:39)\n    by 0x4011F3: main (bs_test_10.cpp:143)\n  Address 0x51f00c0 is 0 bytes inside a block of size 9 free'd\n    at 0x4A0764A: operator delete[](void*) (vg_replace_malloc.c:621)\n    by 0x401BB2: String::operator=(String const&) (bs_test_10.cpp:41)\n    by 0x401182: main (bs_test_10.cpp:145)\n  Block was alloc'd at\n    at 0x4A06849: operator new[](unsigned long) (vg_replace_malloc.c:423)\n    by 0x40194F: String::String(char const*) (bs_test_10.cpp:16)\n    by 0x4010DA: main (bs_test_10.cpp:143)\n",
                        "file": "main.cpp",
                        "line": 33,
                        "file_alloced": "main.cpp",
                        "line_alloced": 35
                    },
                    {
                        "type": 2,
                        "output": " Invalid write of size 1\n    at 0x401C76: String::operator=(char const*) (bs_test_10.cpp:57)\n    by 0x4012B4: main (bs_test_10.cpp:153)\n  Address 0x51f0160 is 0 bytes inside a block of size 9 free'd\n    at 0x4A0764A: operator delete[](void*) (vg_replace_malloc.c:621)\n    by 0x401C2E: String::operator=(char const*) (bs_test_10.cpp:54)\n    by 0x4012B4: main (bs_test_10.cpp:153)\n  Block was alloc'd at\n    at 0x4A06849: operator new[](unsigned long) (vg_replace_malloc.c:423)\n    by 0x40194F: String::String(char const*) (bs_test_10.cpp:16)\n    by 0x401223: main (bs_test_10.cpp:151)\n",
                        "file": "main.cpp",
                        "line": 51,
                        "file_alloced": "main.cpp",
                        "line_alloced": 48
                    },
                    {
                        "type": 3,
                        "output": " Use of uninitialised value of size 8\n    at 0x401B52: String::String(String const&) (bs_test_10.cpp:35)\n    by 0x401452: main (bs_test_10.cpp:163)\n",
                        "file": "main.cpp",
                        "line": 29
                    },
                    {
                        "type": 2,
                        "output": " Invalid write of size 1\n    at 0x401B52: String::String(String const&) (bs_test_10.cpp:35)\n    by 0x401452: main (bs_test_10.cpp:163)\n  Address 0x0 is not stack'd, malloc'd or (recently) free'd\n",
                        "file": "main.cpp",
                        "line": 29
                    }
                ]
            },
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "11": {
            "status": 5,
            "run_result": {
                "output": "AT8 - testiranje kopirajuceg konstruktora i operatora dodjele\nS2: \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 S4: Danas je ispit.\nS1: \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 S2: \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 S4: Danas je ispit.\n",
                "duration": 0,
                "status": 3,
                "core": "/tmp/buildservice/bs_4147/core.13120"
            },
            "debug_result": {
                "output": "[New LWP 13120]\nCore was generated by `bs_test_11'.\nProgram terminated with signal SIGSEGV, Segmentation fault.\n#0  0x00000000004020d0 in String::String (this=0x7ffcbd89b9f0, s=...) at bs_test_11.cpp:35\n35\t            niz_znakova[i]=s.niz_znakova[i];\nTo enable execution of this file add\n\tadd-auto-load-safe-path /opt/gcc-6.2.0/lib64/libstdc++.so.6.0.22-gdb.py\nline to your configuration file \"$HOME/.gdbinit\".\nTo completely disable this security protection add\n\tset auto-load safe-path /\nline to your configuration file \"$HOME/.gdbinit\".\nFor more information about this security protection see the\n\"Auto-loading safe path\" section in the GDB manual.  E.g., run from the shell:\n\tinfo \"(gdb)Auto-loading safe path\"\n#0  0x00000000004020d0 in String::String (this=0x7ffcbd89b9f0, s=...) at bs_test_11.cpp:35\n#1  0x0000000000400f94 in main () at bs_test_11.cpp:119",
                "parsed_output": [
                    {
                        "file": "main.cpp",
                        "line": 29
                    }
                ]
            },
            "profile_result": {
                "output": "==13132== Memcheck, a memory error detector\n==13132== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==13132== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info\n==13132== Command: bs_test_11\n==13132== Parent PID: 13131\n==13132== \n==13132== Syscall param write(buf) points to uninitialised byte(s)\n==13132==    at 0x36312DB850: __write_nocancel (in /lib64/libc-2.12.so)\n==13132==    by 0x36312719B2: _IO_file_write@@GLIBC_2.2.5 (in /lib64/libc-2.12.so)\n==13132==    by 0x3631272F64: _IO_do_write@@GLIBC_2.2.5 (in /lib64/libc-2.12.so)\n==13132==    by 0x3631272167: _IO_file_sync@@GLIBC_2.2.5 (in /lib64/libc-2.12.so)\n==13132==    by 0x3631266879: fflush (in /lib64/libc-2.12.so)\n==13132==    by 0x4D2CC2D: pubsync (streambuf:271)\n==13132==    by 0x4D2CC2D: std::ostream::flush() (ostream.tcc:219)\n==13132==    by 0x400EEC: main (bs_test_11.cpp:116)\n==13132==  Address 0x4fa5004 is in a rw- anonymous segment\n==13132== \n==13132== Use of uninitialised value of size 8\n==13132==    at 0x4020D0: String::String(String const&) (bs_test_11.cpp:35)\n==13132==    by 0x400F05: main (bs_test_11.cpp:117)\n==13132== \n==13132== Use of uninitialised value of size 8\n==13132==    at 0x402237: operator<<(std::ostream&, String const&) (bs_test_11.cpp:67)\n==13132==    by 0x400F29: main (bs_test_11.cpp:118)\n==13132== \n==13132== Use of uninitialised value of size 8\n==13132==    at 0x4020CD: String::String(String const&) (bs_test_11.cpp:35)\n==13132==    by 0x400F93: main (bs_test_11.cpp:119)\n==13132== \n==13132== Use of uninitialised value of size 8\n==13132==    at 0x4020D0: String::String(String const&) (bs_test_11.cpp:35)\n==13132==    by 0x400F93: main (bs_test_11.cpp:119)\n==13132== \n==13132== \n==13132== Process terminating with default action of signal 11 (SIGSEGV)\n==13132==  Bad permissions for mapped region at address 0x400BC0\n==13132==    at 0x4020D0: String::String(String const&) (bs_test_11.cpp:35)\n==13132==    by 0x400F93: main (bs_test_11.cpp:119)\n==13132== \n==13132== HEAP SUMMARY:\n==13132==     in use at exit: 24 bytes in 2 blocks\n==13132==   total heap usage: 3 allocs, 1 frees, 72,728 bytes allocated\n==13132== \n==13132== LEAK SUMMARY:\n==13132==    definitely lost: 0 bytes in 0 blocks\n==13132==    indirectly lost: 0 bytes in 0 blocks\n==13132==      possibly lost: 0 bytes in 0 blocks\n==13132==    still reachable: 24 bytes in 2 blocks\n==13132==         suppressed: 0 bytes in 0 blocks\n==13132== Reachable blocks (those to which a pointer was found) are not shown.\n==13132== To see them, rerun with: --leak-check=full --show-leak-kinds=all\n==13132== \n==13132== For counts of detected and suppressed errors, rerun with: -v\n==13132== Use --track-origins=yes to see where uninitialised values come from\n==13132== ERROR SUMMARY: 22 errors from 5 contexts (suppressed: 4 from 4)\n",
                "status": 3,
                "parsed_output": [
                    {
                        "type": 3,
                        "output": " Use of uninitialised value of size 8\n    at 0x4020D0: String::String(String const&) (bs_test_11.cpp:35)\n    by 0x400F05: main (bs_test_11.cpp:117)\n",
                        "file": "main.cpp",
                        "line": 29
                    },
                    {
                        "type": 3,
                        "output": " Use of uninitialised value of size 8\n    at 0x402237: operator<<(std::ostream&, String const&) (bs_test_11.cpp:67)\n    by 0x400F29: main (bs_test_11.cpp:118)\n",
                        "file": "main.cpp",
                        "line": 61
                    }
                ]
            },
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "12": {
            "status": 3,
            "run_result": [],
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 2,
                "output": "bs_test_12.cpp: In function ‘int main()’:\nbs_test_12.cpp:185:11: error: invalid user-defined conversion from ‘char’ to ‘const String&’ [-fpermissive]\n     s1 += 'p';\n           ^~~\nbs_test_12.cpp:16:5: note: candidate is: String::String(const char*) <near match>\n     String(const char* niz=\"\"): niz_znakova(new char[std::strlen(niz)]), br_znakova(std::strlen(niz)) {}\n     ^~~~~~\nbs_test_12.cpp:16:5: note:   conversion of argument 1 would be ill-formed:\nbs_test_12.cpp:185:11: error: invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]\n     s1 += 'p';\n           ^~~\nbs_test_12.cpp:185:11: error: invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]\nbs_test_12.cpp:16:5: note:   initializing argument 1 of ‘String::String(const char*)’\n     String(const char* niz=\"\"): niz_znakova(new char[std::strlen(niz)]), br_znakova(std::strlen(niz)) {}\n     ^~~~~~\nbs_test_12.cpp:99:13: note:   initializing argument 1 of ‘String& String::operator+=(const String&)’\n     String& operator+=(const String& s) {\n             ^~~~~~~~\nbs_test_12.cpp:187:11: error: invalid user-defined conversion from ‘char’ to ‘const String&’ [-fpermissive]\n     s1 += 'q';\n           ^~~\nbs_test_12.cpp:16:5: note: candidate is: String::String(const char*) <near match>\n     String(const char* niz=\"\"): niz_znakova(new char[std::strlen(niz)]), br_znakova(std::strlen(niz)) {}\n     ^~~~~~\nbs_test_12.cpp:16:5: note:   conversion of argument 1 would be ill-formed:\nbs_test_12.cpp:187:11: error: invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]\n     s1 += 'q';\n           ^~~\nbs_test_12.cpp:187:11: error: invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]\nbs_test_12.cpp:16:5: note:   initializing argument 1 of ‘String::String(const char*)’\n     String(const char* niz=\"\"): niz_znakova(new char[std::strlen(niz)]), br_znakova(std::strlen(niz)) {}\n     ^~~~~~\nbs_test_12.cpp:99:13: note:   initializing argument 1 of ‘String& String::operator+=(const String&)’\n     String& operator+=(const String& s) {\n             ^~~~~~~~\nbs_test_12.cpp:198:11: error: invalid user-defined conversion from ‘char’ to ‘const String&’ [-fpermissive]\n     s1 += 'p';\n           ^~~\nbs_test_12.cpp:16:5: note: candidate is: String::String(const char*) <near match>\n     String(const char* niz=\"\"): niz_znakova(new char[std::strlen(niz)]), br_znakova(std::strlen(niz)) {}\n     ^~~~~~\nbs_test_12.cpp:16:5: note:   conversion of argument 1 would be ill-formed:\nbs_test_12.cpp:198:11: error: invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]\n     s1 += 'p';\n           ^~~\nbs_test_12.cpp:198:11: error: invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]\nbs_test_12.cpp:16:5: note:   initializing argument 1 of ‘String::String(const char*)’\n     String(const char* niz=\"\"): niz_znakova(new char[std::strlen(niz)]), br_znakova(std::strlen(niz)) {}\n     ^~~~~~\nbs_test_12.cpp:99:13: note:   initializing argument 1 of ‘String& String::operator+=(const String&)’\n     String& operator+=(const String& s) {\n             ^~~~~~~~\nbs_test_12.cpp:200:11: error: invalid user-defined conversion from ‘char’ to ‘const String&’ [-fpermissive]\n     s1 += 'q';\n           ^~~\nbs_test_12.cpp:16:5: note: candidate is: String::String(const char*) <near match>\n     String(const char* niz=\"\"): niz_znakova(new char[std::strlen(niz)]), br_znakova(std::strlen(niz)) {}\n     ^~~~~~\nbs_test_12.cpp:16:5: note:   conversion of argument 1 would be ill-formed:\nbs_test_12.cpp:200:11: error: invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]\n     s1 += 'q';\n           ^~~\nbs_test_12.cpp:200:11: error: invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]\nbs_test_12.cpp:16:5: note:   initializing argument 1 of ‘String::String(const char*)’\n     String(const char* niz=\"\"): niz_znakova(new char[std::strlen(niz)]), br_znakova(std::strlen(niz)) {}\n     ^~~~~~\nbs_test_12.cpp:99:13: note:   initializing argument 1 of ‘String& String::operator+=(const String&)’\n     String& operator+=(const String& s) {\n             ^~~~~~~~",
                "parsed_output": [
                    {
                        "type": "error",
                        "file": "TEST_CODE",
                        "line": 70,
                        "col": "11",
                        "message": "invalid user-defined conversion from 'char' to 'const String&' [-fpermissive]",
                        "output": "/tmp/buildservice/bs_4147/bs_test_12.cpp:185:11: error: invalid user-defined conversion from ‘char’ to ‘const String&’ [-fpermissive]     s1 += 'p';           ^~~",
                        "code": "s1 += 'p';"
                    },
                    {
                        "type": "error",
                        "file": "TEST_CODE",
                        "line": 70,
                        "col": "11",
                        "message": "invalid conversion from 'char' to 'const char*' [-fpermissive]",
                        "output": "/tmp/buildservice/bs_4147/bs_test_12.cpp:185:11: error: invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]     s1 += 'p';           ^~~",
                        "code": "s1 += 'p';"
                    },
                    {
                        "type": "error",
                        "file": "TEST_CODE",
                        "line": 70,
                        "col": "11",
                        "message": "invalid conversion from 'char' to 'const char*' [-fpermissive]",
                        "output": "/tmp/buildservice/bs_4147/bs_test_12.cpp:185:11: error: invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]"
                    },
                    {
                        "type": "error",
                        "file": "TEST_CODE",
                        "line": 72,
                        "col": "11",
                        "message": "invalid user-defined conversion from 'char' to 'const String&' [-fpermissive]",
                        "output": "/tmp/buildservice/bs_4147/bs_test_12.cpp:187:11: error: invalid user-defined conversion from ‘char’ to ‘const String&’ [-fpermissive]     s1 += 'q';           ^~~",
                        "code": "s1 += 'q';"
                    },
                    {
                        "type": "error",
                        "file": "TEST_CODE",
                        "line": 72,
                        "col": "11",
                        "message": "invalid conversion from 'char' to 'const char*' [-fpermissive]",
                        "output": "/tmp/buildservice/bs_4147/bs_test_12.cpp:187:11: error: invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]     s1 += 'q';           ^~~",
                        "code": "s1 += 'q';"
                    },
                    {
                        "type": "error",
                        "file": "TEST_CODE",
                        "line": 72,
                        "col": "11",
                        "message": "invalid conversion from 'char' to 'const char*' [-fpermissive]",
                        "output": "/tmp/buildservice/bs_4147/bs_test_12.cpp:187:11: error: invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]"
                    },
                    {
                        "type": "error",
                        "file": "TEST_CODE",
                        "line": 83,
                        "col": "11",
                        "message": "invalid user-defined conversion from 'char' to 'const String&' [-fpermissive]",
                        "output": "/tmp/buildservice/bs_4147/bs_test_12.cpp:198:11: error: invalid user-defined conversion from ‘char’ to ‘const String&’ [-fpermissive]     s1 += 'p';           ^~~",
                        "code": "s1 += 'p';"
                    },
                    {
                        "type": "error",
                        "file": "TEST_CODE",
                        "line": 83,
                        "col": "11",
                        "message": "invalid conversion from 'char' to 'const char*' [-fpermissive]",
                        "output": "/tmp/buildservice/bs_4147/bs_test_12.cpp:198:11: error: invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]     s1 += 'p';           ^~~",
                        "code": "s1 += 'p';"
                    },
                    {
                        "type": "error",
                        "file": "TEST_CODE",
                        "line": 83,
                        "col": "11",
                        "message": "invalid conversion from 'char' to 'const char*' [-fpermissive]",
                        "output": "/tmp/buildservice/bs_4147/bs_test_12.cpp:198:11: error: invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]"
                    },
                    {
                        "type": "error",
                        "file": "TEST_CODE",
                        "line": 85,
                        "col": "11",
                        "message": "invalid user-defined conversion from 'char' to 'const String&' [-fpermissive]",
                        "output": "/tmp/buildservice/bs_4147/bs_test_12.cpp:200:11: error: invalid user-defined conversion from ‘char’ to ‘const String&’ [-fpermissive]     s1 += 'q';           ^~~",
                        "code": "s1 += 'q';"
                    },
                    {
                        "type": "error",
                        "file": "TEST_CODE",
                        "line": 85,
                        "col": "11",
                        "message": "invalid conversion from 'char' to 'const char*' [-fpermissive]",
                        "output": "/tmp/buildservice/bs_4147/bs_test_12.cpp:200:11: error: invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]     s1 += 'q';           ^~~",
                        "code": "s1 += 'q';"
                    },
                    {
                        "type": "error",
                        "file": "TEST_CODE",
                        "line": 85,
                        "col": "11",
                        "message": "invalid conversion from 'char' to 'const char*' [-fpermissive]",
                        "output": "/tmp/buildservice/bs_4147/bs_test_12.cpp:200:11: error: invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]"
                    }
                ]
            }
        }
    },
    "queue_items": 0,
    "time": 1594736007
}