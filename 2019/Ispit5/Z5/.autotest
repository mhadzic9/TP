{
    "id": 5743,
    "name": "Tehnike programiranja (2019\/2020), Ispit 5, Zadatak 5",
    "language": "C++",
    "preferred_compiler": "g++",
    "required_compiler": "g++",
    "compiler_features": [],
    "compiler_options": "-std=c++11 -O1 -Wall -Wuninitialized -Winit-self -Wfloat-equal -Wno-sign-compare -Werror=implicit-function-declaration -Werror=vla -pedantic -lm -pass-exit-codes",
    "compiler_options_debug": "-std=c++11 -ggdb -lm -pass-exit-codes",
    "profile": "true",
    "debug": "true",
    "test": "true",
    "compile": "true",
    "run": "false",
    "test_specifications": [
        {
            "id": 1,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "std::cout<<\"------ AT 1 ------\"<<std::endl;\n    \/\/ AT 1: Trivijalni test (ispravnost parametara i povratnog tipa)\n    {\n        \/\/ Kod se mora samo kompajlirati\n        int** pokazivac = nullptr;\n        int n = 3;\n\n        if (false)\n            KreirajPascalovTrougao(pokazivac,n);\n\n        std::cout<<\"OK\";\n    }\n\n    std::cout<<std::endl<<\"------ AT 2 ------\"<<std::endl;\n    \/\/ AT 2: Test laksih slucajeva Pascalovog trougla - 1\n    {\n        int** pokazivac;\n        int n = 1;\n        KreirajPascalovTrougao(pokazivac,n);\n\n        for (int i {}; i<n; i++)\n        {\n            for (int j {}; j<=i; j++)\n                std::cout<<pokazivac[i][j]<<\" \";\n\n            std::cout<<std::endl;\n        }\n\n        delete[] pokazivac[0];\n        delete[] pokazivac;\n\n        std::cout<<std::endl;\n\n        n = 2;\n        KreirajPascalovTrougao(pokazivac,n);\n\n        for (int i {}; i<n; i++)\n        {\n            for (int j {}; j<=i; j++)\n                std::cout<<pokazivac[i][j]<<\" \";\n\n            std::cout<<std::endl;\n        }\n\n        delete[] pokazivac[0];\n        delete[] pokazivac;\n    }\n\n    std::cout<<std::endl<<\"------ AT 3 ------\"<<std::endl;\n    \/\/ AT 3: Test laksih slucajeva Pascalovog trougla - 2\n    {\n        int** pokazivac;\n        int n = 3;\n        KreirajPascalovTrougao(pokazivac,n);\n\n        for (int i {}; i<n; i++)\n        {\n            for (int j {}; j<=i; j++)\n                std::cout<<pokazivac[i][j]<<\" \";\n\n            std::cout<<std::endl;\n        }\n\n        delete[] pokazivac[0];\n        delete[] pokazivac;\n    }\n\n    std::cout<<std::endl<<\"------ AT 4 ------\"<<std::endl;\n    \/\/ AT 4: Test na vecu vrijednost n\n    {\n        int** pokazivac;\n        int n = 15;\n        KreirajPascalovTrougao(pokazivac,n);\n\n        for (int i {}; i<n; i++)\n        {\n            for (int j {}; j<=i; j++)\n                std::cout<<pokazivac[i][j]<<\" \";\n\n            std::cout<<std::endl;\n        }\n\n        delete[] pokazivac[0];\n        delete[] pokazivac;\n    }\n\n    std::cout<<std::endl<<\"------ AT 5 ------\"<<std::endl;\n    \/\/ AT 5: Test ispravnosti izuzetaka\n    {\n        \/\/ Funkcija ne smije ostaviti iza sebe bilo kakvu dinamicki alociranu memoriju\n\n        try\n        {\n            int** pokazivac;\n            int n = 0;\n            KreirajPascalovTrougao(pokazivac,n);\n\n            std::cout<<\"Nije bacen izuzetak!\";\n        }\n        catch (std::domain_error e)\n        {\n            std::cout<<e.what();\n        }\n        catch(...)\n        {\n            std::cout<<\"Neispravan tip izuzetka!\";\n        }\n\n        std::cout<<std::endl;\n\n        try\n        {\n            int** pokazivac;\n            int n = 1234569;\n            KreirajPascalovTrougao(pokazivac,n);\n\n            std::cout<<\"Nije bacen izuzetak!\";\n        }\n        catch (std::range_error e)\n        {\n            std::cout<<e.what();\n        }\n        catch(...)\n        {\n            std::cout<<\"Neispravan tip izuzetka!\";\n        }\n    }",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "------ AT 1 ------\\nOK\\n------ AT 2 ------\\n1 \\n\\n1 \\n1 1 \\n\\n------ AT 3 ------\\n1 \\n1 1 \\n1 2 1 \\n\\n------ AT 4 ------\\n1 \\n1 1 \\n1 2 1 \\n1 3 3 1 \\n1 4 6 4 1 \\n1 5 10 10 5 1 \\n1 6 15 20 15 6 1 \\n1 7 21 35 35 21 7 1 \\n1 8 28 56 70 56 28 8 1 \\n1 9 36 84 126 126 84 36 9 1 \\n1 10 45 120 210 252 210 120 45 10 1 \\n1 11 55 165 330 462 462 330 165 55 11 1 \\n1 12 66 220 495 792 924 792 495 220 66 12 1 \\n1 13 78 286 715 1287 1716 1716 1287 715 286 78 13 1 \\n1 14 91 364 1001 2002 3003 3432 3003 2002 1001 364 91 14 1 \\n\\n------ AT 5 ------\\nPogresan broj redova\\nKreiranje nije uspjelo"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 2,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "std::cout<<\"------ AT 6 ------\"<<std::endl;\n    \/\/ AT 6: Testiranje da li je izvrsena kontinualna alokacija - 1\n    {\n        int** pokazivac;\n        int n = 5;\n        KreirajPascalovTrougao(pokazivac, n);\n\n        for(int j = 0; j < 15; j++)\n            std::cout << pokazivac[0][j] << \" \";\n\n        delete[] pokazivac[0];\n        delete[] pokazivac;\n    }\n\n    std::cout<<std::endl<<\"------ AT 7 ------\"<<std::endl;\n    \/\/ AT 7: Testiranje da li je izvrsena kontinualna alokacija - 2\n    {\n        int** pokazivac;\n        int n = 9;\n        KreirajPascalovTrougao(pokazivac, n);\n\n        for(int j = 0; j < 45; j++)\n            std::cout << pokazivac[0][j] << \" \";\n\n        delete[] pokazivac[0];\n        delete[] pokazivac;\n    }\n\n    std::cout<<std::endl<<\"------ AT 8 ------\"<<std::endl;\n    \/\/ AT 8: Test main programa - 1\n    {\n        _main();\n    }\n\n    std::cout<<std::endl<<\"------ AT 9 ------\"<<std::endl;\n    \/\/ AT 9: Test main programa - 2\n    {\n        _main();\n    }\n\n    std::cout<<std::endl<<\"------ AT 10 ------\"<<std::endl;\n    \/\/ AT 10: Test main programa - 3\n    {\n        _main();\n    }",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": "6\n-2\n1000000000\n"
            },
            "expected": [
                "------ AT 6 ------\\n1 1 1 1 2 1 1 3 3 1 1 4 6 4 1 \\n------ AT 7 ------\\n1 1 1 1 2 1 1 3 3 1 1 4 6 4 1 1 5 10 10 5 1 1 6 15 20 15 6 1 1 7 21 35 35 21 7 1 1 8 28 56 70 56 28 8 1 \\n------ AT 8 ------\\nBroj redova: 1 \\n1 1 \\n1 2 1 \\n1 3 3 1 \\n1 4 6 4 1 \\n1 5 10 10 5 1 \\n\\n------ AT 9 ------\\nBroj redova: Problem: Pogresan broj redova!\\n\\n------ AT 10 ------\\nBroj redova: Problem: Kreiranje nije uspjelo!"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        }
    ]
}