{
    "id": 5740,
    "name": "Tehnike programiranja (2019\/2020), Ispit 5, Zadatak 2",
    "language": "C++",
    "preferred_compiler": "g++",
    "required_compiler": "g++",
    "compiler_features": [],
    "compiler_options": "-std=c++11 -O1 -Wall -Wuninitialized -Winit-self -Wfloat-equal -Wno-sign-compare -Werror=implicit-function-declaration -Werror=vla -pedantic -lm -pass-exit-codes",
    "compiler_options_debug": "-std=c++11 -ggdb -lm -pass-exit-codes",
    "profile": "true",
    "debug": "true",
    "test": "true",
    "compile": "true",
    "run": "false",
    "test_specifications": [
        {
            "id": 1,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "std::cout<<\"------ AT 1 ------\"<<std::endl;\n   \/\/ AT 1: Testiranje ispravnosti parametara i povratnog tipa - 1\n    {\n        \/\/ Neophodno je da se kod samo kompajlira\n\n        std::vector<std::vector<double>> v;\n\n        if (false)\n            auto rezultat = OdrediVrstuMatrice(v);\n\n        std::cout<<\"OK\";\n    }\n\n    std::cout<<std::endl<<\"------ AT 2 ------\"<<std::endl;\n    \/\/ AT 2: Test ortogonalne matrice 4x4\n    {\n        std::vector<std::vector<double>> v {{1.\/2, 1.\/2, 1.\/2, 1.\/2}, {1.\/2, -1.\/2, 1.\/2, -1.\/2}, {1.\/2, 1.\/2, -1.\/2, -1.\/2}, {1.\/2, -1.\/2, -1.\/2, 1.\/2}};\n\n        VrstaMatrice rezultat = OdrediVrstuMatrice(v);\n\n        if (rezultat == VrstaMatrice::Ortogonalna)\n            std::cout<<\"Ortogonalna\";\n        else\n            std::cout<<\"Pogresna povratna vrijednost\";\n    }\n\n    std::cout<<std::endl<<\"------ AT 3 ------\"<<std::endl;\n    \/\/ AT 3: Slanje funkciji prazne matrice\n    {\n        \/\/ Prazna matrica je ortoganlna matrica (postavka zadatka)\n        std::vector<std::vector<double>> v;\n\n        VrstaMatrice rezultat = OdrediVrstuMatrice(v);\n\n        if (rezultat == VrstaMatrice::Ortogonalna)\n            std::cout<<\"Ortogonalna\";\n        else\n            std::cout<<\"Pogresna povratna vrijednost\";\n    }\n\n    std::cout<<std::endl<<\"------ AT 4 ------\"<<std::endl;\n    \/\/ AT 4: Testiranje tipa - Grbava matrica\n    {\n        std::vector<std::vector<double>> v;\n\n        \/\/ Kreiranje grbave matrice\n        for (int i{};i<4;i++)\n            v.push_back(std::vector<double>(i));\n\n        \/\/ Test rezultata\n        VrstaMatrice rezultat = OdrediVrstuMatrice(v);\n\n        if (rezultat == VrstaMatrice::Grbava)\n            std::cout<<\"Grbava\";\n        else\n            std::cout<<\"Pogresna povratna vrijednost\";\n    }\n\n    std::cout<<std::endl<<\"------ AT 5 ------\"<<std::endl;\n    \/\/ AT 5: Testiranje tipa - Nekvadratna\n    {\n        \/\/ Nekvadratna matrica 3x4\n        std::vector<std::vector<double>> v (3,std::vector<double>(4));\n\n\n        \/\/ Test rezultata\n        VrstaMatrice rezultat = OdrediVrstuMatrice(v);\n\n        if (rezultat == VrstaMatrice::Nekvadratna)\n            std::cout<<\"Nekvadratna\";\n        else\n            std::cout<<\"Pogresna povratna vrijednost\";\n    }",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "------ AT 1 ------\\nOK\\n------ AT 2 ------\\nOrtogonalna\\n------ AT 3 ------\\nOrtogonalna\\n------ AT 4 ------\\nGrbava\\n------ AT 5 ------\\nNekvadratna"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        },
        {
            "id": 2,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "std::cout<<\"------ AT 6 ------\"<<std::endl;\n    \/\/ AT 6: Testiranje tipa - KvadratnaNeortogonalna\n    {\n        std::vector<std::vector<double>> v {{1,2,3,4,5}, {6,7,8,9,10}, {11,12,13,14,15}, {16,17,18,19,20}, {21,22,23,24,25}};\n\n        \/\/ Test rezultata\n        VrstaMatrice rezultat = OdrediVrstuMatrice(v);\n\n        if (rezultat == VrstaMatrice::KvadratnaNeortogonalna)\n            std::cout<<\"Kvadratna neortogonalna\";\n        else\n            std::cout<<\"Pogresna povratna vrijednost\";\n    }\n\n    std::cout<<std::endl<<\"------ AT 7 ------\"<<std::endl;\n    \/\/ AT 7: Test ortogonalne matrice - 1\n    {\n        \/\/ Biblioteka cmath mora biti ukljucena svakako zbog absolutne vrijednosti\n        const double PI = 4*std::atan(1);\n        std::vector<std::vector<double>> v {{std::cos(PI\/2),-std::sin(PI\/2)}, {std::sin(PI\/2),std::cos(PI\/2)}};\n\n        VrstaMatrice rezultat = OdrediVrstuMatrice(v);\n\n        if (rezultat == VrstaMatrice::Ortogonalna)\n            std::cout<<\"Ortogonalna\";\n        else\n            std::cout<<\"Pogresna povratna vrijednost\";\n    }\n\n    std::cout<<std::endl<<\"------ AT 8 ------\"<<std::endl;\n    \/\/ AT 8: Test ortogonalne matrice - 2\n    {\n        std::vector<std::vector<double>> v {{0.866025,-0.5},{0.5,0.866025}};\n\n        VrstaMatrice rezultat = OdrediVrstuMatrice(v);\n\n        if (rezultat == VrstaMatrice::Ortogonalna)\n            std::cout<<\"Ortogonalna\";\n        else\n            std::cout<<\"Pogresna povratna vrijednost\";\n    }\n\n    std::cout<<std::endl<<\"------ AT 9 ------\"<<std::endl;\n    \/\/ AT 9: Test main programa - 1\n    {\n        _main();\n    }\n\n    std::cout<<std::endl<<\"------ AT 10 ------\"<<std::endl;\n    \/\/ AT 10: Test main programa - 2\n    {\n        _main();\n    }",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": "2\n0 1 1 0\n3\n1 2 3 4 5 6 7 8 9\n"
            },
            "expected": [
                "------ AT 6 ------\\nKvadratna neortogonalna\\n------ AT 7 ------\\nOrtogonalna\\n------ AT 8 ------\\nOrtogonalna\\n------ AT 9 ------\\nUnesite dimenziju kvadratne matrice: Unesite elemente matrice: Matrica je ortogonalna\\n------ AT 10 ------\\nUnesite dimenziju kvadratne matrice: Unesite elemente matrice: Matrica nije ortogonalna"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "false",
            "regex": "false",
            "substring": "false"
        }
    ]
}